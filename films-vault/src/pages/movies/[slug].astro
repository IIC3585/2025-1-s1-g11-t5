---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/layout/Header.astro';
import Footer from '../../components/layout/Footer.astro';
import { getPosterUrl, getBackdropUrl, getProfileUrl, getPlaceholderImage } from '../../utils/image';

export async function getStaticPaths() {
  const movies = await getCollection('movies');
  
  return movies.map((movie) => {
    const slug = `${movie.data.title.toLowerCase().replace(/[^a-z0-9]+/g, '-')}-${movie.data.id}`;
    return {
      params: { slug },
      props: { movie }
    };
  });
}

const { movie } = Astro.props;
const { data } = movie;

// Generate URLs
const posterUrl = getPosterUrl(data.posterPath, 'w500') || getPlaceholderImage(data.title);
const backdropUrl = getBackdropUrl(data.backdropPath, 'w1280');

// Format data
const releaseYear = new Date(data.releaseDate).getFullYear();
const formattedRuntime = data.runtime ? `${Math.floor(data.runtime / 60)}h ${data.runtime % 60}m` : 'Runtime unknown';
const formattedBudget = data.budget ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(data.budget) : null;
const formattedRevenue = data.revenue ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(data.revenue) : null;

// Get main cast and crew
const mainCast = data.credits?.cast?.slice(0, 8) || [];
const director = data.credits?.crew?.find(person => person.job === 'Director');
const producers = data.credits?.crew?.filter(person => person.job === 'Producer').slice(0, 3) || [];
---

<Layout title={data.title} description={data.overview}>
  <Header />
  
  <main>
    <!-- Backdrop Hero Section -->
    {backdropUrl && (
      <section class="relative h-96 overflow-hidden">
        <img 
          src={backdropUrl} 
          alt={data.title}
          class="w-full h-full object-cover"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-vault-dark via-vault-dark/80 to-transparent"></div>
        
        <!-- Breadcrumb -->
        <div class="absolute top-6 left-6">
          <nav class="flex items-center space-x-2 text-sm text-vault-cream/80">
            <a href="/" class="hover:text-vault-light transition-colors">Home</a>
            <span>/</span>
            <a href="/movies" class="hover:text-vault-light transition-colors">Movies</a>
            <span>/</span>
            <span class="text-vault-cream">{data.title}</span>
          </nav>
        </div>
      </section>
    )}

    <div class="container mx-auto px-6 py-8">
      <!-- Movie Header -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 -mt-32 relative z-10">
        <!-- Poster -->
        <div class="lg:col-span-1">
          <div class="bg-vault-dark/80 border border-vault-light/20 rounded-xl overflow-hidden shadow-vault-lg backdrop-blur-sm">
            <img 
              src={posterUrl} 
              alt={data.title}
              class="w-full aspect-[2/3] object-cover"
            />
          </div>
        </div>

        <!-- Movie Info -->
        <div class="lg:col-span-2 bg-vault-dark/80 border border-vault-light/20 rounded-xl p-8 backdrop-blur-sm">
          <!-- Title and Meta -->
          <div class="mb-6">
            <h1 class="text-4xl font-bold text-vault-cream mb-2">{data.title}</h1>
            {data.originalTitle !== data.title && (
              <p class="text-vault-light/60 text-lg mb-2">Original: {data.originalTitle}</p>
            )}
            
            <div class="flex flex-wrap items-center gap-4 text-vault-light/80">
              <span class="bg-vault-medium/20 px-3 py-1 rounded-lg">{releaseYear}</span>
              <span>{formattedRuntime}</span>
              <div class="flex items-center space-x-1">
                <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                </svg>
                <span class="font-semibold">{data.voteAverage.toFixed(1)}</span>
                <span class="text-sm">({data.voteCount.toLocaleString()} votes)</span>
              </div>
            </div>
          </div>

          <!-- Genres -->
          <div class="mb-6">
            <div class="flex flex-wrap gap-2">
              {data.genres.map(genre => (
                <a href={`/genres/${genre.name.toLowerCase().replace(/[^a-z0-9]+/g, '-')}`}
                   class="bg-vault-medium/20 border border-vault-medium/30 hover:border-vault-medium/60 text-vault-cream px-3 py-1 rounded-lg text-sm transition-colors">
                  {genre.name}
                </a>
              ))}
            </div>
          </div>

          <!-- Tagline -->
          {data.tagline && (
            <blockquote class="text-vault-light italic text-lg mb-6 border-l-4 border-vault-medium pl-4">
              "{data.tagline}"
            </blockquote>
          )}

          <!-- Overview -->
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-vault-cream mb-3">Overview</h2>
            <p class="text-vault-light/90 leading-relaxed">{data.overview}</p>
          </div>

          <!-- Key People -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {director && (
              <div>
                <h3 class="text-vault-cream font-medium mb-2">Director</h3>
                <p class="text-vault-light">{director.name}</p>
              </div>
            )}
            
            {producers.length > 0 && (
              <div>
                <h3 class="text-vault-cream font-medium mb-2">Producers</h3>
                <p class="text-vault-light">{producers.map(p => p.name).join(', ')}</p>
              </div>
            )}
          </div>
        </div>
      </div>

      <!-- Cast Section -->
      {mainCast.length > 0 && (
        <section class="mt-16">
          <h2 class="text-2xl font-bold text-vault-cream mb-6">Main Cast</h2>
          <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4">
            {mainCast.map(actor => {
              const profileUrl = getProfileUrl(actor.profilePath);
              return (
                <div class="text-center">
                  <div class="aspect-square mb-3 rounded-lg overflow-hidden bg-vault-medium/20">
                    {profileUrl ? (
                      <img 
                        src={profileUrl} 
                        alt={actor.name}
                        class="w-full h-full object-cover"
                        loading="lazy"
                      />
                    ) : (
                      <div class="w-full h-full flex items-center justify-center">
                        <svg class="w-8 h-8 text-vault-light/40" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                        </svg>
                      </div>
                    )}
                  </div>
                  <h4 class="text-vault-cream text-sm font-medium mb-1">{actor.name}</h4>
                  <p class="text-vault-light/60 text-xs">{actor.character}</p>
                </div>
              );
            })}
          </div>
        </section>
      )}

      <!-- Movie Details -->
      <section class="mt-16">
        <h2 class="text-2xl font-bold text-vault-cream mb-6">Details</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          
          {formattedBudget && (
            <div class="bg-vault-dark/60 border border-vault-light/20 rounded-lg p-4">
              <h3 class="text-vault-cream font-medium mb-2">Budget</h3>
              <p class="text-vault-light text-lg">{formattedBudget}</p>
            </div>
          )}

          {formattedRevenue && (
            <div class="bg-vault-dark/60 border border-vault-light/20 rounded-lg p-4">
              <h3 class="text-vault-cream font-medium mb-2">Revenue</h3>
              <p class="text-vault-light text-lg">{formattedRevenue}</p>
            </div>
          )}

          <div class="bg-vault-dark/60 border border-vault-light/20 rounded-lg p-4">
            <h3 class="text-vault-cream font-medium mb-2">Release Date</h3>
            <p class="text-vault-light text-lg">{new Date(data.releaseDate).toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</p>
          </div>

          <div class="bg-vault-dark/60 border border-vault-light/20 rounded-lg p-4">
            <h3 class="text-vault-cream font-medium mb-2">Status</h3>
            <p class="text-vault-light text-lg">{data.status}</p>
          </div>

          <div class="bg-vault-dark/60 border border-vault-light/20 rounded-lg p-4">
            <h3 class="text-vault-cream font-medium mb-2">Popularity</h3>
            <p class="text-vault-light text-lg">{data.popularity.toFixed(1)}</p>
          </div>

          {data.homepage && (
            <div class="bg-vault-dark/60 border border-vault-light/20 rounded-lg p-4">
              <h3 class="text-vault-cream font-medium mb-2">Official Site</h3>
              <a href={data.homepage} 
                 target="_blank" 
                 rel="noopener noreferrer"
                 class="text-vault-medium hover:text-vault-light transition-colors">
                Visit Website
              </a>
            </div>
          )}
        </div>
      </section>
    </div>
  </main>
  
  <Footer />
</Layout> 